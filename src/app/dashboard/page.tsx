import { query } from '@/lib/db';import { getTenantFromRequest, ensureAccount } from '@/lib/tenant';
export default async function Dashboard(){const slug=await getTenantFromRequest();const accountId=await ensureAccount(slug);const res=await query(`SELECT "Date","Report Type","Field Name / Location","Oil BBL","Gas Sales MCF","Produced Water BWPD","Flare MCF" FROM production WHERE account_id=$1 ORDER BY "Date" DESC NULLS LAST LIMIT 500`,[accountId]);const rows:any[]=res.rows;const sum=(k:string)=>rows.reduce((a,r)=>a+(Number(r[k]??0)||0),0);const oil=sum('Oil BBL'),gas=sum('Gas Sales MCF'),water=sum('Produced Water BWPD'),flare=sum('Flare MCF');return(<main className='container'><h1>Dashboard â€” Tenant: {slug}</h1><div className='kpis'><div className='kpi'><h4>Oil (BBL)</h4><h2>{oil.toLocaleString()}</h2></div><div className='kpi'><h4>Gas Sales (MCF)</h4><h2>{gas.toLocaleString()}</h2></div><div className='kpi'><h4>Produced Water (BWPD)</h4><h2>{water.toLocaleString()}</h2></div><div className='kpi'><h4>Flare (MCF)</h4><h2>{flare.toLocaleString()}</h2></div></div><h3>Recent Rows</h3><div style={{overflowX:'auto'}}><table><thead><tr><th>Date</th><th>Report</th><th>Field/Location</th><th>Oil</th><th>Gas</th><th>Water</th><th>Flare</th></tr></thead><tbody>{rows.map((r,i)=>(<tr key={i}><td>{r['Date']??''}</td><td>{r['Report Type']??''}</td><td>{r['Field Name / Location']??''}</td><td>{r['Oil BBL']??''}</td><td>{r['Gas Sales MCF']??''}</td><td>{r['Produced Water BWPD']??''}</td><td>{r['Flare MCF']??''}</td></tr>))}</tbody></table></div></main>);}