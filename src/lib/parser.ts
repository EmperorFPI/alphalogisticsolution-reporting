import * as XLSX from 'xlsx';export const UNIFIED_COLUMNS=["Date","Report Type","Field Name / Location","Oil BBL","Oil Sales BBL","Gas Sales MCF","Gas Lift MCF","Produced Water BWPD","Return Gas MCF","Flare MCF","Oil Stock BBL","Injection Pressure PSI","Suction PSI","Discharge PSI","RPM","Gas Flow MCFD","Hours Operating","Operational Notes"] as const;type Row=Record<string,any>;export type UnifiedRow=Record<typeof UNIFIED_COLUMNS[number],any>&{source_file?:string};function num(v:any){if(v===null||v===undefined||v==='') return null;const n=Number(String(v).replace(/,/g,''));return Number.isFinite(n)?n:null;}function normDate(v:any){try{const d=new Date(v);if(isNaN(+d))return null;return d.toISOString().slice(0,10);}catch{return null;}}export function parseXlsx(buf:Buffer,filename:string):UnifiedRow[]{const wb=XLSX.read(buf,{type:'buffer'});const ws=wb.Sheets[wb.SheetNames[0]];const json=XLSX.utils.sheet_to_json<Row>(ws,{defval:null});return json.map(row=>({"Date":row["Date"]?normDate(row["Date"]):null,"Report Type":row["Report Type"]??null,"Field Name / Location":row["Field Name / Location"]??null,"Oil BBL":num(row["Oil BBL"]),"Oil Sales BBL":num(row["Oil Sales BBL"]),"Gas Sales MCF":num(row["Gas Sales MCF"]),"Gas Lift MCF":num(row["Gas Lift MCF"]),"Produced Water BWPD":num(row["Produced Water BWPD"]),"Return Gas MCF":num(row["Return Gas MCF"]),"Flare MCF":num(row["Flare MCF"]),"Oil Stock BBL":num(row["Oil Stock BBL"]),"Injection Pressure PSI":num(row["Injection Pressure PSI"]),"Suction PSI":num(row["Suction PSI"]),"Discharge PSI":num(row["Discharge PSI"]),"RPM":num(row["RPM"]),"Gas Flow MCFD":num(row["Gas Flow MCFD"]),"Hours Operating":num(row["Hours Operating"]),"Operational Notes":row["Operational Notes"]??null,source_file:filename}));}
export function parseCsv(buf:Buffer,filename:string):UnifiedRow[]{const text=buf.toString('utf8');const lines=text.split(/\r?\n/).filter(Boolean);if(!lines.length) return [];const header=lines[0].split(',').map(s=>s.trim());const idx=(n:string)=>header.indexOf(n);const out:UnifiedRow[]=[];for(let i=1;i<lines.length;i++){const cols=lines[i].split(',').map(s=>s.trim());const r:any={};for(const name of UNIFIED_COLUMNS){const j=idx(name);r[name]=j>=0?cols[j]:null;}r['Date']=r['Date']?normDate(r['Date']):null;for(const name of UNIFIED_COLUMNS){if(["Oil BBL","Oil Sales BBL","Gas Sales MCF","Gas Lift MCF","Produced Water BWPD","Return Gas MCF","Flare MCF","Oil Stock BBL","Injection Pressure PSI","Suction PSI","Discharge PSI","RPM","Gas Flow MCFD","Hours Operating"].includes(name)){r[name]=r[name]?Number(String(r[name]).replace(/,/g,'')):null;}}r['source_file']=filename;out.push(r as UnifiedRow);}return out;}